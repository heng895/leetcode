    class Solution {
        List<String> res = new ArrayList<>();
        StringBuilder path = new StringBuilder();

        public List<String> letterCombinations(String digits) {
            if (digits.length() == 0) return res;
            String[] numString = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
            backtracking(digits, numString, 0);
            return res;
        }

        public void backtracking(String digits, String[] numString, int start) {
            if (digits.length() == start) {
                res.add(path.toString());
                return;
            }
            String str = numString[digits.charAt(start) - '0'];
            for (int i = 0; i < str.length(); i++) {
                path.append(str.charAt(i));
                backtracking(digits, numString, start + 1);
                path.deleteCharAt(path.length() - 1);
            }
        }
    }

//runtime:0 ms
//memory:40.9 MB
